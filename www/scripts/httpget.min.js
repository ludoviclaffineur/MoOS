function getInputs()
{	
	var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
   	xmlHttp.open( "GET", "getInputs.snf", false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    return receive.documentElement.getElementsByTagName("name");
}

function getOutputs()
{	
	var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
   	xmlHttp.open( "GET", "getOutputs.snf", false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    return receive.documentElement.getElementsByTagName("name");
}

function getCells()
{   
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", "getCells.snf", false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    return receive.documentElement.getElementsByTagName("cell");
}

function updateCell()
{   
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    var cCoeff =  document.getElementById('coeff').value;
    var cInput = document.getElementById('input').value;
    var cOutput = document.getElementById('output').value;
    xmlHttp.open( "GET", "updateCell.snf?coeff="+cCoeff+"&input="+cInput+"&output="+cOutput, false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    var cInputId = idFromInputName(InputNames, cInput);
    var cOutputId = idFromOutputName(OutputNames, cOutput);
    Circles[cOutputId*InputNames.length+cInputId].objs[0].text = cCoeff;
    refreshGraph();
    return receive.documentElement.getElementsByTagName("status").nodeValue;
        
    
}

function refreshGraph(){
    oio.draw();
    grid.draw(context);
    for (var i = Circles.length - 1; i >= 0; i--) {
        Circles[i].draw(context);
    };
    for (var i = InputNames.length - 1; i >= 0; i--) {
        InputNames[i].draw(context);
    };
    //InputName.draw(io.context);
    for (var i = OutputNames.length - 1; i >= 0; i--) {
        OutputNames[i].draw(context);
    }

}

function idFromInputName(InputNames, InputName){
    for (var i = InputNames.length - 1; i >= 0; i--) {
        if (InputName == InputNames[i].text)
            return i;
    }
    return -1;
}

function idFromOutputName(OutputNames, OutputName){
    for (var i = OutputNames.length - 1; i >= 0; i--) {
        if (OutputName == OutputNames[i].objs[0].text)
            return i;
    }
}

function getOutput(OutputName){
    var xmlHttp = null;
                xmlHttp = new XMLHttpRequest();
                xmlHttp.open( "GET", "getOutput.snf?output="+OutputName, false);
                xmlHttp.send( null );
                found = true;
}