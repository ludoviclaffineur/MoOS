function getInputs()
{	
	var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
   	xmlHttp.open( "GET", "getInputs.snf", false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    return receive.documentElement.getElementsByTagName("name");
}

function getOutputs()
{	
	var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
   	xmlHttp.open( "GET", "getOutputs.snf", false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    return receive.documentElement.getElementsByTagName("name");
}

function getCells()
{   
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", "getCells.snf", false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    return receive.documentElement.getElementsByTagName("cell");
}

function updateCell()
{   
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    var cCoeff =  document.getElementById('coeff').value;
    var cInput = document.getElementById('input').value;
    var cOutput = document.getElementById('output').value;
    xmlHttp.open( "GET", "updateCell.snf?coeff="+cCoeff+"&input="+cInput+"&output="+cOutput, false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    var cInputId = idFromInputName(InputNames, cInput);
    var cOutputId = idFromOutputName(OutputNames, cOutput);
    Circles[cOutputId*InputNames.length+cInputId].objs[0].text = cCoeff;
    refreshGraph();
    return receive.documentElement.getElementsByTagName("status").nodeValue;
        
    
}

function refreshGraph(){
    oio.draw();
    grid.draw(context);
    for (var i = Circles.length - 1; i >= 0; i--) {
        Circles[i].draw(context);
    };
    for (var i = InputNames.length - 1; i >= 0; i--) {
        InputNames[i].draw(context);
    };
    //InputName.draw(io.context);
    for (var i = OutputNames.length - 1; i >= 0; i--) {
        OutputNames[i].draw(context);
    }

}

function idFromInputName(InputNames, InputName){
    for (var i = InputNames.length - 1; i >= 0; i--) {
        if (InputName == InputNames[i].text)
            return i;
    }
    return -1;
}

function idFromOutputName(OutputNames, OutputName){
    for (var i = OutputNames.length - 1; i >= 0; i--) {
        if (OutputName == OutputNames[i].objs[0].text)
            return i;
    }
}

function getOutput(OutputName){
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", "getOutput.snf?output="+OutputName, false);
    xmlHttp.send( null );
    var receive = xmlHttp.responseXML;
    return ParseHTTPResponse (xmlHttp);

    //return receive.documentElement.getElementsByTagName("response").nodeValue;
}

function ParseHTTPResponse (xmlHttp) {
    var receive = xmlHttp.responseXML;
    var Elements = xmlHttp.responseXML.documentElement.childNodes[1].childNodes;
    var tab=[]
    for (var i = Elements.length - 1; i >= 0; i--) {
        tab[2*i]= Elements[i].nodeName;
        tab[2*i + 1] = Elements[i].textContent;
    }
    return tab;
}

function updateOutput(form){
    var parameters = "?";
    var Theid,name;
    for (var i = form.length - 2; i >= 0; i--) {
        parameters+= form[i].id + "=" + form[i].value + "&";
        if ("Identifier" == form[i].id){
            Theid = form[i].value;
        }
        else if ("Name" == form[i].id){
            thename = form[i].value;
        }
    }
    parameters=parameters.replace("/",":");
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
     xmlHttp.open( "GET", "updateOutput.snf"+parameters, false);

    xmlHttp.send( null );
        init();

}

function addOutput(){
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", "addOutput.snf", false);
    xmlHttp.send( null );
    init();
    refreshGraph();
}


function deleteOutput(form){
    var TheId;
    for (var i = form.length - 1; i >= 0; i--) {
        if (form[i].id == "Identifier"){
            TheId = form[i].value;
        }
    };
    var xmlHttp = null;
    xmlHttp = new XMLHttpRequest();
    xmlHttp.open( "GET", "deleteOutput.snf?id="+TheId, false);
    xmlHttp.send( null );
    init();
    refreshGraph();
}

function saveState(form){
    var filename;
    for (var i = form.length - 1; i >= 0; i--) {
        if (form[i].id == "filename"){
            filename = form[i].value;
        }
    };
    if (filename!=""){
        var xmlHttp = null;
        xmlHttp = new XMLHttpRequest();
        xmlHttp.open( "GET", "save.snf?filename="+filename, false);
        xmlHttp.send( null );
    }
}

function loadState(form){
    var filename;
    for (var i = form.length - 1; i >= 0; i--) {
        if (form[i].id == "filename"){
            filename = form[i].value;
        }
    };
    if (filename!=""){
        var xmlHttp = null;
        xmlHttp = new XMLHttpRequest();
        xmlHttp.open( "GET", "load.snf?filename="+filename, false);
        xmlHttp.send( null );
        init();
    }
    
}












